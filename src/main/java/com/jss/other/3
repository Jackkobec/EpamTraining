Вопрос 3.1.
Какие из ключевых слов могут быть использованы при объявлении конструк-
тора?
1) private;   ===МОЖЕТ ОТВЕТ 1
2) final;
3) native;
4) abstract;
5) protected. ===МОЖЕТ  ОТВЕТ 5
Вопрос 3.2.
Как следует вызвать конструктор класса Quest3, чтобы в результате выпол-
нения кода была выведена на консоль строка "Конструктор".
public class Quest3 {
 Quest3 (int i){ System.out.print("Конструктор"); }
 public static void main(String[] args){
Quest3 s= new Quest3();
//1
 }
public Quest3() {
//2
 }
{
//3
 } }
1) вместо //1 написать Quest3(1);
2) вместо //2 написать Quest3(1);
3) вместо //3 написать new Quest3(1);    === ВОТ ТАК  ОТВЕТ 3
4) вместо //3 написать Quest3(1).
Вопрос 3.3.
Какие из следующих утверждений истинные?
1) nonstatic-метод не может быть вызван из статического метода;   === НЕ МОЖЕТ ОТВЕТ 1
2) static-метод не может быть вызван из нестатического метода;   ==МОЖЕТ
3) private-метод не может быть вызван из другого метода этого класса; ===МОЖЕТ
4) final-метод не может быть статическим. === МОЖЕТ
Вопрос 3.4.
Дан код:
public class Quest5 {
 {System.out.print("1");}
 static{System.out.print("2");}  ===БУДЕТ ВЫВЕДЕНО ЧИСЛО 2
Quest5(){System.out.print("3");}
public static void main(String[] args) {
System.out.print("4");   ===БУДЕТ ВЫВЕДЕНО ЧИСЛО 4
} }
В результате при компиляции и запуске будет выведено:
1) 1234;
2) 4;
3) 34;
4) 24;  === ОТВЕТ БУДЕТ ВЫВЕДЕНО 24
5) 14.